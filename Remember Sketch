    y:mouseY
  });
  
  if(mouseTrail.length>maxTrailLength){
    mouseTrail.shift();
  }
  
  stroke(0,100);
  noFill();
  beginShape();
  for(let i=0; i< mouseTrail.length; i++) {
    vertex(mouseTrail [i].x, mouseTrail[i].y);
  }
  endShape();
  
  for(let s of squares){
    s.x=mouseX + s.r* cos(s.theta);
    s.y=mouseY + s.r* sin(s.theta);
    
    
    push();
    translate(s.x, s.y);
    rotate(s.theta);
    fill(255);
    noStroke();
    circle(0,0,10);
    arc(-10,0,20,20, PI+QUARTER_PI, TWO_PI-QUARTER_PI);
    arc(10,0,20,20, QUARTER_PI,PI-QUARTER_PI);
    pop();
    
    s.r+=random(-5,5);
    
    s.theta+= 0.05;
  }
}
